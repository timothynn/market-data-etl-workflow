{
  "name": "Webhook to Database",
  "nodes": [
    {
      "parameters": {
        "httpMethod": "POST",
        "path": "data-intake",
        "responseMode": "responseNode",
        "options": {}
      },
      "id": "webhook-node",
      "name": "Webhook",
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 1,
      "position": [250, 300],
      "webhookId": "data-intake"
    },
    {
      "parameters": {
        "jsCode": "// Validate and transform incoming data\nconst data = $input.first().json;\n\n// Add timestamp\ndata.received_at = new Date().toISOString();\n\n// Validate required fields\nif (!data.name || !data.email) {\n  throw new Error('Missing required fields: name, email');\n}\n\n// Clean email\ndata.email = data.email.toLowerCase().trim();\n\n// Add metadata\ndata.source = 'webhook';\ndata.processed = true;\n\nreturn { json: data };"
      },
      "id": "transform-node",
      "name": "Transform Data",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [450, 300]
    },
    {
      "parameters": {
        "operation": "insert",
        "schema": "public",
        "table": "webhook_data",
        "columns": "name,email,received_at,source,data",
        "options": {}
      },
      "id": "postgres-node",
      "name": "PostgreSQL",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2,
      "position": [650, 300],
      "credentials": {
        "postgres": {
          "id": "1",
          "name": "PostgreSQL account"
        }
      }
    },
    {
      "parameters": {
        "respondWith": "json",
        "responseBody": "={{ { \"success\": true, \"message\": \"Data received\", \"id\": $json.id } }}"
      },
      "id": "response-node",
      "name": "Respond to Webhook",
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1,
      "position": [850, 300]
    },
    {
      "parameters": {
        "errorMessage": "={{ $json.message }}"
      },
      "id": "error-node",
      "name": "Error Handler",
      "type": "n8n-nodes-base.stopAndError",
      "typeVersion": 1,
      "position": [650, 500]
    }
  ],
  "connections": {
    "Webhook": {
      "main": [
        [
          {
            "node": "Transform Data",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Transform Data": {
      "main": [
        [
          {
            "node": "PostgreSQL",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "PostgreSQL": {
      "main": [
        [
          {
            "node": "Respond to Webhook",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "settings": {
    "executionOrder": "v1"
  },
  "staticData": null,
  "tags": [
    {
      "name": "webhook",
      "id": "webhook"
    },
    {
      "name": "database",
      "id": "database"
    }
  ],
  "pinData": {},
  "versionId": "1"
}
